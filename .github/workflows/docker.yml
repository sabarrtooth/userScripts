name: Docker Build

on:
  # Run on pushes to these branches, but only if they contain changes
  # to at least one file other than README.md or in .github/
  push:
    branches:
      - dev
      - master
    paths-ignore:
      - '**/README.md'
      - '**/.github/**'
  # Also run on released published via the GitHub Web App (see "Releases").
  # Releases create git tags, so this workflow will have the relevant tag info too.
  release:
    types: [published]

jobs:

  docker-dev:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/userscripts
            ghcr.io/drazzilb08/userscripts
          tags: |
            # Tag 'dev' on the dev branch only
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}

            # Tag versioned releases, e.g. 'v0.1.11'.
            # {{version}} is shorthand for {{major}}.{{minor}}.{{patch}} (can include pre-release).
            # Also tags 'latest' (i.e. latest versioned release).
            type=semver,pattern={{version}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            # If a versioned release, use the version tag; otherwise use the branch name.
            "BRANCH=${{ github.event_name == 'release' && steps.meta.outputs.version || vars.GITHUB_REF_NAME }}"
          # Build, but don't actually push docker images on open pull requests.
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
